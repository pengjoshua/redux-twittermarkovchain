{
  "_args": [
    [
      {
        "raw": "chromedriver",
        "scope": null,
        "escapedName": "chromedriver",
        "name": "chromedriver",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/Users/carbonara/Desktop/interview/twittermarkovchain"
    ]
  ],
  "_from": "chromedriver@latest",
  "_id": "chromedriver@2.29.0",
  "_inCache": true,
  "_location": "/chromedriver",
  "_nodeVersion": "7.2.1",
  "_npmOperationalInternal": {
    "host": "packages-18-east.internal.npmjs.com",
    "tmp": "tmp/chromedriver-2.29.0.tgz_1491515686534_0.10293860733509064"
  },
  "_npmUser": {
    "name": "giggio",
    "email": "giggio@giggio.net"
  },
  "_npmVersion": "3.10.10",
  "_phantomChildren": {},
  "_requested": {
    "raw": "chromedriver",
    "scope": null,
    "escapedName": "chromedriver",
    "name": "chromedriver",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/chromedriver/-/chromedriver-2.29.0.tgz",
  "_shasum": "e3fd8b3c08dce2562b80ef1b0b846597659d0cc3",
  "_shrinkwrap": null,
  "_spec": "chromedriver",
  "_where": "/Users/carbonara/Desktop/interview/twittermarkovchain",
  "author": {
    "name": "Giovanni Bassi",
    "email": "giggio@giggio.net",
    "url": "http://www.lambda3.com.br"
  },
  "bin": {
    "chromedriver": "./bin/chromedriver"
  },
  "bugs": {
    "url": "https://github.com/giggio/node-chromedriver/issues"
  },
  "dependencies": {
    "adm-zip": "^0.4.7",
    "kew": "^0.7.0",
    "mkdirp": "^0.5.1",
    "rimraf": "^2.5.4"
  },
  "description": "ChromeDriver for Selenium",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "shasum": "e3fd8b3c08dce2562b80ef1b0b846597659d0cc3",
    "tarball": "https://registry.npmjs.org/chromedriver/-/chromedriver-2.29.0.tgz"
  },
  "gitHead": "b4cbf91deb3716b457dc669755f54d0048179c08",
  "homepage": "https://github.com/giggio/node-chromedriver",
  "keywords": [
    "chromedriver",
    "selenium"
  ],
  "licenses": [
    {
      "type": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  ],
  "main": "lib/chromedriver",
  "maintainers": [
    {
      "name": "giggio",
      "email": "giggio@giggio.net"
    }
  ],
  "name": "chromedriver",
  "optionalDependencies": {},
  "readme": "ChromeDriver\n=======\n[![Build status](https://travis-ci.org/giggio/node-chromedriver.svg)](https://travis-ci.org/giggio/node-chromedriver/) [![Build status](https://ci.appveyor.com/api/projects/status/wr4c16rs5q113vy3?svg=true)](https://ci.appveyor.com/project/giggio/node-chromedriver)\n[![npm](https://img.shields.io/npm/dt/chromedriver.svg)](https://www.npmjs.com/package/chromedriver)\n\nAn NPM wrapper for Selenium [ChromeDriver](https://sites.google.com/a/chromium.org/chromedriver/).\n\nBuilding and Installing\n-----------------------\n\n```shell\nnpm install chromedriver\n```\n\nOr grab the source and\n\n```shell\nnode ./install.js\n```\n\nWhat this is really doing is just grabbing a particular \"blessed\" (by\nthis module) version of ChromeDriver. As new versions are released\nand vetted, this module will be updated accordingly.\n\nThe package has been set up to fetch and run ChromeDriver for MacOS (darwin),\nLinux based platforms (as identified by nodejs), and Windows.  If you\nspot any platform weirdnesses, let us know or send a patch.\n\n### Custom binaries url\n\nTo use a mirror of the ChromeDriver binaries use npm config property `chromedriver_cdnurl`.\nDefault is `http://chromedriver.storage.googleapis.com`.\n\n```shell\nnpm install chromedriver --chromedriver_cdnurl=https://npm.taobao.org/mirrors/chromedriver\n```\n\nOr add property into your [`.npmrc`](https://docs.npmjs.com/files/npmrc) file.\n\n```\nchromedriver_cdnurl=https://npm.taobao.org/mirrors/chromedriver\n```\n\nAnother option is to use PATH variable `CHROMEDRIVER_CDNURL`.\n\n```shell\nCHROMEDRIVER_CDNURL=https://npm.taobao.org/mirrors/chromedriver npm install chromedriver\n```\n\n### Custom binaries file\n\nTo get the chromedriver from the filesystem instead of a web request use the npm config property `chromedriver_filepath`.\n\n```shell\nnpm install chromedriver --chromedriver_filepath=/path/to/chromedriver_mac64.zip\n```\n\nOr add property into your [`.npmrc`](https://docs.npmjs.com/files/npmrc) file.\n\n```\nchromedriver_filepath=/path/to/chromedriver_mac64.zip\n```\n\nAnother option is to use the PATH variable `CHROMEDRIVER_FILEPATH`\n\n```shell\nCHROMEDRIVER_FILEPATH=/path/to/chromedriver_mac64.zip\n```\n\nRunning\n-------\n\n```shell\nbin/chromedriver [arguments]\n```\n\nAnd npm will install a link to the binary in `node_modules/.bin` as\nit is wont to do.\n\nRunning with Selenium WebDriver\n-------------------------------\n\n```javascript\nrequire('chromedriver');\nvar webdriver = require('selenium-webdriver');\nvar driver = new webdriver.Builder()\n  .forBrowser('chrome')\n  .build();\n```\n\n(Tested for selenium-webdriver version `2.48.2`)\n\nThe path will be added to the process automatically, you don't need to configure it.\nBut you can get it from `require('chromedriver').path` if you want it.\n\nRunning via node\n----------------\n\nThe package exports a `path` string that contains the path to the\nchromdriver binary/executable.\n\nBelow is an example of using this package via node.\n\n```javascript\nvar childProcess = require('child_process');\nvar chromedriver = require('chromedriver');\nvar binPath = chromedriver.path;\n\nvar childArgs = [\n  'some argument'\n];\n\nchildProcess.execFile(binPath, childArgs, function(err, stdout, stderr) {\n  // handle results\n});\n\n```\n\nYou can also use the start and stop methods:\n\n```javascript\nvar chromedriver = require('chromedriver');\n\nargs = [\n\t// optional arguments\n];\nchromedriver.start(args);\n// run your tests\nchromedriver.stop();\n\n```\nNote: if your tests are ran asynchronously, chromedriver.stop() will have to be\nexecuted as a callback at the end of your tests\n\nVersioning\n----------\n\nThe NPM package version tracks the version of chromedriver that will be installed,\nwith an additional build number that is used for revisions to the installer.\nFor Latest version of Chromedriver:\n\nEither add property into your [`.npmrc`](https://docs.npmjs.com/files/npmrc) file.\n\n```\nchromedriver_version=LATEST\n```\n\nAnother option is to use env variable `CHROMEDRIVER_VERSION`.\n\n```shell\nCHROMEDRIVER_VERSION=LATEST npm install chromedriver\n```\n\nA Note on chromedriver\n-------------------\n\nChromedriver is not a library for NodeJS.\n\nThis is an _NPM wrapper_ and can be used to conveniently make ChromeDriver available\nIt is not a Node JS wrapper.\n\nContributing\n------------\n\nQuestions, comments, bug reports, and pull requests are all welcome.  Submit them at\n[the project on GitHub](https://github.com/giggio/node-chromedriver/).\n\nBug reports that include steps-to-reproduce (including code) are the\nbest. Even better, make them in the form of pull requests.\n\nAuthor\n------\n\n[Giovanni Bassi](https://github.com/giggio)\n\nThanks for Obvious and their PhantomJS project for heavy inspiration! Check their project on [Github](https://github.com/Obvious/phantomjs/tree/master/bin).\n\nLicense\n-------\n\nLicensed under the Apache License, Version 2.0.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/giggio/node-chromedriver.git"
  },
  "scripts": {
    "install": "node install.js"
  },
  "version": "2.29.0"
}
